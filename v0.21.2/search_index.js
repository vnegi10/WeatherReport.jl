var documenterSearchIndex = {"docs":
[{"location":"#User-Guide","page":"User Guide","title":"User Guide","text":"","category":"section"},{"location":"","page":"User Guide","title":"User Guide","text":"","category":"page"},{"location":"#Overview","page":"User Guide","title":"Overview","text":"","category":"section"},{"location":"","page":"User Guide","title":"User Guide","text":"WeatherReport.jl is designed to work within the Julia REPL. Reports are shown either as plots (via UnicodePlots.jl) or as tables (via PrettyTables.jl). Your location is not tracked, therefore, you need to specify a city/town/village or latitude/longitude yourself. Most major locations (population > 500) around the world are supported.","category":"page"},{"location":"#Available-functions","page":"User Guide","title":"Available functions","text":"","category":"section"},{"location":"","page":"User Guide","title":"User Guide","text":"Modules = [WeatherReport]\nPrivate = false\nOrder   = [:function]","category":"page"},{"location":"#Supported-APIs","page":"User Guide","title":"Supported APIs","text":"","category":"section"},{"location":"","page":"User Guide","title":"User Guide","text":"Weather Forecast\nAir Quality\nHistorical Weather","category":"page"},{"location":"#Exported-names","page":"User Guide","title":"Exported names","text":"","category":"section"},{"location":"","page":"User Guide","title":"User Guide","text":"Modules = [WeatherReport]\nPrivate = false\nOrder   = [:function]","category":"page"},{"location":"#WeatherReport.compare_box_humidity","page":"User Guide","title":"WeatherReport.compare_box_humidity","text":"compare_box_humidity(city::String = \"\",\n                     i_row::Int64 = 1;\n                     lat::Float64 = 0.0,\n                     long::Float64 = 0.0,\n                     month::String = \"Jan\",\n                     num_years::Int64 = 5)\n\nCompares the boxplot distribution of relative humidity at 2 meter above ground for a given location (city or lat/long) for a given month across a given number of years.\n\nArguments\n\ncity::String : Valid city name, e.g. \"Oslo\", \"Paris\", \"Amsterdam\" etc.\ni_row::Int64 : In case of more than one match for a given location,                  select the desired timezone by providing the row index                  from the printed DataFrame. Default is set to 1.\n\nMandatory keywords\n\nmonth::String : Month for which data needs to be compared, e.g. \"Jan\", \"March\" etc.\nnum_years::Int64 : Number of years across which the data will be compared\n\nOptional keywords\n\nlat::Float64 : Geographical WGS84 coordinate of the location (°S < 0, °N > 0)\nlong::Float64 : Geographical WGS84 coordinate of the location (°W < 0, °E > 0)\n\nExample\n\njulia> compare_box_humidity(\"Dubrovnik\", month = \"Feb\", num_years = 2)\n              Dubrovnik: Relative humidity comparison for Feb over last 2 years       \n         Timezone: Europe/Zagreb                    [Weather data by Open-Meteo.com]  \n        ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ \n        ┃      ╷                              ┌────────────────┬──────────┐        ╷┃ \n   2021 ┃      ├──────────────────────────────┤                │          ├────────┤┃ \n        ┃      ╵                              └────────────────┴──────────┘        ╵┃ \n        ┃              ╷                 ┌───────────────┬──────────────┐          ╷┃ \n   2022 ┃              ├─────────────────┤               │              ├──────────┤┃ \n        ┃              ╵                 └───────────────┴──────────────┘          ╵┃ \n        ┃               ╷             ┌─────────────────────┬────────────┐         ╷┃ \n   2023 ┃               ├─────────────┤                     │            ├─────────┤┃ \n        ┃               ╵             └─────────────────────┴────────────┘         ╵┃ \n        ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ \n         20                                  60                                  100  \n                                             [%]                   \n\n\n\n\n\n","category":"function"},{"location":"#WeatherReport.compare_box_rain","page":"User Guide","title":"WeatherReport.compare_box_rain","text":"compare_box_rain(city::String = \"\",\n                 i_row::Int64 = 1;\n                 lat::Float64 = 0.0,\n                 long::Float64 = 0.0,\n                 month::String = \"Jan\",\n                 num_years::Int64 = 5)\n\nCompares the boxplot distribution of rain from large scale weather systems of the preceding hour in millimeter [mm] for a given month across a given number of years.\n\nArguments\n\ncity::String : Valid city name, e.g. \"Oslo\", \"Paris\", \"Amsterdam\" etc.\ni_row::Int64 : In case of more than one match for a given location,                  select the desired timezone by providing the row index                  from the printed DataFrame. Default is set to 1.\n\nMandatory keywords\n\nmonth::String : Month for which data needs to be compared, e.g. \"Jan\", \"March\" etc.\nnum_years::Int64 : Number of years across which the data will be compared\n\nOptional keywords\n\nlat::Float64 : Geographical WGS84 coordinate of the location (°S < 0, °N > 0)\nlong::Float64 : Geographical WGS84 coordinate of the location (°W < 0, °E > 0)\n\nExample\n\njulia> compare_box_rain(\"Dubrovnik\", month = \"March\", num_years = 3)\n                    Dubrovnik: Rain comparison for March over last 3 years            \n         Timezone: Europe/Zagreb                    [Weather data by Open-Meteo.com]  \n        ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ \n        ┃┐                                                 ╷                        ┃ \n   2020 ┃├─────────────────────────────────────────────────┤                        ┃ \n        ┃┘                                                 ╵                        ┃ \n        ┃┐                                                   ╷                      ┃ \n   2021 ┃├───────────────────────────────────────────────────┤                      ┃ \n        ┃┘                                                   ╵                      ┃ \n        ┃┐                                                                    ╷     ┃ \n   2022 ┃├────────────────────────────────────────────────────────────────────┤     ┃ \n        ┃┘                                                                    ╵     ┃ \n        ┃┐                                                     ╷                    ┃ \n   2023 ┃├─────────────────────────────────────────────────────┤                    ┃ \n        ┃┘                                                     ╵                    ┃ \n        ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ \n         0                                   3                                     6  \n                                             [mm]                              \n\n\n\n\n\n","category":"function"},{"location":"#WeatherReport.compare_box_snow","page":"User Guide","title":"WeatherReport.compare_box_snow","text":"compare_box_snow(city::String = \"\",\n                 i_row::Int64 = 1;\n                 lat::Float64 = 0.0,\n                 long::Float64 = 0.0,\n                 month::String = \"Jan\",\n                 num_years::Int64 = 5)\n\nCompares the boxplot distribution of snowfall amount for the preceding hour in centimeter [cm] for a given location (city or lat/long) for a given month across a given number of years.\n\nArguments\n\ncity::String : Valid city name, e.g. \"Oslo\", \"Paris\", \"Amsterdam\" etc.\ni_row::Int64 : In case of more than one match for a given location,                  select the desired timezone by providing the row index                  from the printed DataFrame. Default is set to 1.\n\nMandatory keywords\n\nmonth::String : Month for which data needs to be compared, e.g. \"Jan\", \"March\" etc.\nnum_years::Int64 : Number of years across which the data will be compared\n\nOptional keywords\n\nlat::Float64 : Geographical WGS84 coordinate of the location (°S < 0, °N > 0)\nlong::Float64 : Geographical WGS84 coordinate of the location (°W < 0, °E > 0)\n\nExample\n\njulia> compare_box_snow(\"Turku\", month = \"Jan\", num_years = 3)\n                     Turku: Snowfall comparison for Jan over last 3 years             \n         Timezone: Europe/Helsinki                  [Weather data by Open-Meteo.com]  \n        ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ \n        ┃┐                                   ╷                                      ┃ \n   2020 ┃├───────────────────────────────────┤                                      ┃ \n        ┃┘                                   ╵                                      ┃ \n        ┃┬─┐                                 ╷                                      ┃ \n   2021 ┃│ ├─────────────────────────────────┤                                      ┃ \n        ┃┴─┘                                 ╵                                      ┃ \n        ┃┐                                                          ╷               ┃ \n   2022 ┃├──────────────────────────────────────────────────────────┤               ┃ \n        ┃┘                                                          ╵               ┃ \n        ┃┐                                   ╷                                      ┃ \n   2023 ┃├───────────────────────────────────┤                                      ┃ \n        ┃┘                                   ╵                                      ┃ \n        ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ \n         0                                   1                                     2  \n                                             [cm]                                     \n\n\n\n\n\n","category":"function"},{"location":"#WeatherReport.compare_box_solar","page":"User Guide","title":"WeatherReport.compare_box_solar","text":"compare_box_solar(city::String = \"\",\n                  i_row::Int64 = 1;\n                  lat::Float64 = 0.0,\n                  long::Float64 = 0.0,\n                  month::String = \"Jan\",\n                  num_years::Int64 = 5)\n\nCompares the boxplot distribution of shortwave solar radiation as average of the preceding hour for a given location (city or lat/long) for a given month across a given number of years. This is equal to the total global horizontal irradiation.\n\nArguments\n\ncity::String : Valid city name, e.g. \"Oslo\", \"Paris\", \"Amsterdam\" etc.\ni_row::Int64 : In case of more than one match for a given location,                  select the desired timezone by providing the row index                  from the printed DataFrame. Default is set to 1.\n\nMandatory keywords\n\nmonth::String : Month for which data needs to be compared, e.g. \"Jan\", \"March\" etc.\nnum_years::Int64 : Number of years across which the data will be compared\n\nOptional keywords\n\nlat::Float64 : Geographical WGS84 coordinate of the location (°S < 0, °N > 0)\nlong::Float64 : Geographical WGS84 coordinate of the location (°W < 0, °E > 0)\n\nExample\n\njulia> compare_box_solar(\"Chennai\", month = \"Sept\", num_years = 2)\n              Chennai: Shortwave radiation comparison for Sept over last 2 years      \n         Timezone: Asia/Kolkata                     [Weather data by Open-Meteo.com]  \n        ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ \n        ┃┬──────────────────────────┐                                          ╷    ┃ \n   2021 ┃│                          ├──────────────────────────────────────────┤    ┃ \n        ┃┴──────────────────────────┘                                          ╵    ┃ \n        ┃┬─────────────────────────────┐                                         ╷  ┃ \n   2022 ┃│                             ├─────────────────────────────────────────┤  ┃ \n        ┃┴─────────────────────────────┘                                         ╵  ┃ \n        ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ \n         0                                  500                                1 000  \n                                           [W/m^2]                                   \n\n\n\n\n\n","category":"function"},{"location":"#WeatherReport.compare_box_temp","page":"User Guide","title":"WeatherReport.compare_box_temp","text":"compare_box_temp(city::String = \"\",\n                 i_row::Int64 = 1;\n                 lat::Float64 = 0.0,\n                 long::Float64 = 0.0,\n                 month::String = \"Jan\",\n                 num_years::Int64 = 5)\n\nCompares the boxplot distribution of hourly air temperature [°C] at 2 meter above ground for a given location (city or lat/long) for a given month across a given number of years.\n\nArguments\n\ncity::String : Valid city name, e.g. \"Oslo\", \"Paris\", \"Amsterdam\" etc.\ni_row::Int64 : In case of more than one match for a given location,                  select the desired timezone by providing the row index                  from the printed DataFrame. Default is set to 1.\n\nMandatory keywords\n\nmonth::String : Month for which data needs to be compared, e.g. \"Jan\", \"March\" etc.\nnum_years::Int64 : Number of years across which the data will be compared\n\nOptional keywords\n\nlat::Float64 : Geographical WGS84 coordinate of the location (°S < 0, °N > 0)\nlong::Float64 : Geographical WGS84 coordinate of the location (°W < 0, °E > 0)\n\nExample\n\njulia> compare_box_temp(\"Chandigarh\", num_years = 5, month = \"May\")\n                  Chandigarh: Air temp. comparison for May over last 5 years          \n         Timezone: Asia/Kolkata                     [Weather data by Open-Meteo.com]  \n        ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ \n        ┃             ╷               ┌─────────┬────────┐           ╷              ┃ \n   2018 ┃             ├───────────────┤         │        ├───────────┤              ┃ \n        ┃             ╵               └─────────┴────────┘           ╵              ┃ \n        ┃               ╷          ┌──────────┬────────┐               ╷            ┃ \n   2019 ┃               ├──────────┤          │        ├───────────────┤            ┃ \n        ┃               ╵          └──────────┴────────┘               ╵            ┃ \n        ┃             ╷            ┌────────┬───────┐               ╷               ┃ \n   2020 ┃             ├────────────┤        │       ├───────────────┤               ┃ \n        ┃             ╵            └────────┴───────┘               ╵               ┃ \n        ┃             ╷           ┌───────┬───────┐             ╷                   ┃ \n   2021 ┃             ├───────────┤       │       ├─────────────┤                   ┃ \n        ┃             ╵           └───────┴───────┘             ╵                   ┃ \n        ┃                  ╷           ┌───────┬───────┐           ╷                ┃ \n   2022 ┃                  ├───────────┤       │       ├───────────┤                ┃ \n        ┃                  ╵           └───────┴───────┘           ╵                ┃ \n        ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ \n         10                                  30                                   50  \n                                             [°C]                                     \n\n\n\n\n\n","category":"function"},{"location":"#WeatherReport.compare_box_windspeed","page":"User Guide","title":"WeatherReport.compare_box_windspeed","text":"compare_box_windspeed(city::String = \"\",\n                      i_row::Int64 = 1;\n                      lat::Float64 = 0.0,\n                      long::Float64 = 0.0,\n                      month::String = \"Jan\",\n                      num_years::Int64 = 5)\n\nCompares the boxplot distribution of wind speed at 10 meter above ground for a given location (city or lat/long) for a given month across a given number of years.\n\nArguments\n\ncity::String : Valid city name, e.g. \"Oslo\", \"Paris\", \"Amsterdam\" etc.\ni_row::Int64 : In case of more than one match for a given location,                  select the desired timezone by providing the row index                  from the printed DataFrame. Default is set to 1.\n\nMandatory keywords\n\nmonth::String : Month for which data needs to be compared, e.g. \"Jan\", \"March\" etc.\nnum_years::Int64 : Number of years across which the data will be compared\n\nOptional keywords\n\nlat::Float64 : Geographical WGS84 coordinate of the location (°S < 0, °N > 0)\nlong::Float64 : Geographical WGS84 coordinate of the location (°W < 0, °E > 0)\n\nExample\n\njulia> compare_box_windspeed(\"Copenhagen\", month = \"Feb\", num_years = 2)\n[ Info: More than one match found, showing report for location in row 1.\n[ Info: You can select another location by its row index.\n2×4 DataFrame\n Row │ CITY        TIMEZONE           LATITUDE  LONGITUDE \n     │ String?     String31           Float64   Float64   \n─────┼────────────────────────────────────────────────────\n   1 │ Copenhagen  Europe/Copenhagen   55.6759    12.5655\n   2 │ Copenhagen  America/New_York    43.8934   -75.6735\n                 Copenhagen: Wind speed comparison for Feb over last 2 years          \n         Timezone: Europe/Copenhagen                [Weather data by Open-Meteo.com]  \n        ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ \n        ┃╷             ┌────┬──────┐                 ╷                              ┃ \n   2021 ┃├─────────────┤    │      ├─────────────────┤                              ┃ \n        ┃╵             └────┴──────┘                 ╵                              ┃ \n        ┃╷                    ┌──────┬─────┐                      ╷                 ┃ \n   2022 ┃├────────────────────┤      │     ├──────────────────────┤                 ┃ \n        ┃╵                    └──────┴─────┘                      ╵                 ┃ \n        ┃ ╷           ┌───────┬────────┐                                          ╷ ┃ \n   2023 ┃ ├───────────┤       │        ├──────────────────────────────────────────┤ ┃ \n        ┃ ╵           └───────┴────────┘                                          ╵ ┃ \n        ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ \n         0                                   30                                   60  \n                                            [km/h]                                    \n\n\n\n\n\n","category":"function"},{"location":"#WeatherReport.export_to_sqlite","page":"User Guide","title":"WeatherReport.export_to_sqlite","text":"Saves the hourly historical temperature, rain, snowfall, relative humidity, windspeed and solar data for a given city (between \"startdate\" and \"enddate\") to a SQLite database. Each of the weather variable is saved as a separate table. The database itself is saved to the \"export\" folder in the root of this repository.\n\nArguments\n\ncity::String : Valid city name, e.g. \"Oslo\", \"Paris\", \"Amsterdam\" etc.\ni_row::Int64 : In case of more than one match for a given location,                  select the desired timezone by providing the row index                  from the printed DataFrame. Default is set to 1.\nstart_date::String : Starting day in ISO8601 date format, e.g. \"2023-02-01\"\nend_date::String : Ending day in ISO8601 date format, e.g. \"2023-02-25\"\n\nOptional keywords\n\nlat::Float64 : Geographical WGS84 coordinate of the location (°S < 0, °N > 0)\nlong::Float64 : Geographical WGS84 coordinate of the location (°W < 0, °E > 0)\n\nExample\n\njulia> export_to_sqlite(\"Veldhoven\", start_date = \"2022-01-01\", end_date = \"2022-01-31\")\n\n\n\n\n\n","category":"function"},{"location":"#WeatherReport.plot_box_humidity","page":"User Guide","title":"WeatherReport.plot_box_humidity","text":"plot_box_humidity(city::String = \"\",\n                  i_row::Int64 = 1;\n                  lat::Float64 = 0.0,\n                  long::Float64 = 0.0,\n                  year::String = \"2022\")\n\nShows the monthly boxplot distribution of relative humidity at 2 meter above ground for a given location (city or lat/long).\n\nArguments\n\ncity::String : Valid city name, e.g. \"Oslo\", \"Paris\", \"Amsterdam\" etc.\ni_row::Int64 : In case of more than one match for a given location,                  select the desired timezone by providing the row index                  from the printed DataFrame. Default is set to 1.\nyear::String : Year for which data needs to be shown, e.g. \"2020\"\n\nOptional keywords\n\nlat::Float64 : Geographical WGS84 coordinate of the location (°S < 0, °N > 0)\nlong::Float64 : Geographical WGS84 coordinate of the location (°W < 0, °E > 0)\n\nExample\n\njulia> plot_box_humidity(\"Dubrovnik\", year = \"2023\")\n                          Dubrovnik: Relative humidity distribution for 2023              \n             Timezone: Europe/Zagreb                    [Weather data by Open-Meteo.com]  \n            ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ \n            ┃            ╷                        ┌────────────┬────────────┐          ╷┃ \n    January ┃            ├────────────────────────┤            │            ├──────────┤┃ \n            ┃            ╵                        └────────────┴────────────┘          ╵┃ \n            ┃       ╷               ┌───────────────────────┬──────────────┐           ╷┃ \n   February ┃       ├───────────────┤                       │              ├───────────┤┃ \n            ┃       ╵               └───────────────────────┴──────────────┘           ╵┃ \n            ┃╷                                      ┌───────────┬────────┐           ╷  ┃ \n      March ┃├──────────────────────────────────────┤           │        ├───────────┤  ┃ \n            ┃╵                                      └───────────┴────────┘           ╵  ┃ \n            ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ \n             30                                  65                                  100  \n                                                 [%]                                      \n\n\n\n\n\n","category":"function"},{"location":"#WeatherReport.plot_box_rain","page":"User Guide","title":"WeatherReport.plot_box_rain","text":"plot_box_rain(city::String = \"\",\n              i_row::Int64 = 1;\n              lat::Float64 = 0.0,\n              long::Float64 = 0.0,\n              year::String = \"2022\")\n\nShows the monthly boxplot distribution of rain from large scale weather systems of the preceding hour in millimeter [mm] for a given location (city or lat/long).\n\nArguments\n\ncity::String : Valid city name, e.g. \"Oslo\", \"Paris\", \"Amsterdam\" etc.\ni_row::Int64 : In case of more than one match for a given location,                  select the desired timezone by providing the row index                  from the printed DataFrame. Default is set to 1.\nyear::String : Year for which data needs to be shown, e.g. \"2020\"\n\nOptional keywords\n\nlat::Float64 : Geographical WGS84 coordinate of the location (°S < 0, °N > 0)\nlong::Float64 : Geographical WGS84 coordinate of the location (°W < 0, °E > 0)\n\nExample\n\njulia> plot_box_rain(\"Mumbai\", year = \"2023\")\n                              Mumbai: Rain monthly distribution for 2023                  \n             Timezone: Asia/Kolkata                     [Weather data by Open-Meteo.com]  \n            ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ \n            ┃┐      ╷                                                                   ┃ \n    January ┃├──────┤                                                                   ┃ \n            ┃┘      ╵                                                                   ┃ \n            ┃╷                                                                          ┃ \n   February ┃┤                                                                          ┃ \n            ┃╵                                                                          ┃ \n            ┃┐                                                                         ╷┃ \n      March ┃├─────────────────────────────────────────────────────────────────────────┤┃ \n            ┃┘                                                                         ╵┃ \n            ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ \n             0                                  0.5                                    1  \n                                                 [mm]                                     \n\n\n\n\n\n","category":"function"},{"location":"#WeatherReport.plot_box_snow","page":"User Guide","title":"WeatherReport.plot_box_snow","text":"plot_box_snow(city::String = \"\",\n              i_row::Int64 = 1;\n              lat::Float64 = 0.0,\n              long::Float64 = 0.0,\n              year::String = \"2022\")\n\nShows the monthly boxplot distribution of snowfall amount for the preceding hour in centimeter [cm] for a given location (city or lat/long).\n\nArguments\n\ncity::String : Valid city name, e.g. \"Oslo\", \"Paris\", \"Amsterdam\" etc.\ni_row::Int64 : In case of more than one match for a given location,                  select the desired timezone by providing the row index                  from the printed DataFrame. Default is set to 1.\nyear::String : Year for which data needs to be shown, e.g. \"2020\"\n\nOptional keywords\n\nlat::Float64 : Geographical WGS84 coordinate of the location (°S < 0, °N > 0)\nlong::Float64 : Geographical WGS84 coordinate of the location (°W < 0, °E > 0)\n\nExample\n\njulia> plot_box_snow(\"Tromso\", year = \"2023\")\n                            Tromso: Snowfall monthly distribution for 2023                \n             Timezone: Europe/Oslo                      [Weather data by Open-Meteo.com]  \n            ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ \n            ┃┬───┐                            ╷                                         ┃ \n    January ┃│   ├────────────────────────────┤                                         ┃ \n            ┃┴───┘                            ╵                                         ┃ \n            ┃┬───┐                                                                 ╷    ┃ \n   February ┃│   ├─────────────────────────────────────────────────────────────────┤    ┃ \n            ┃┴───┘                                                                 ╵    ┃ \n            ┃┬─┐                              ╷                                         ┃ \n      March ┃│ ├──────────────────────────────┤                                         ┃ \n            ┃┴─┘                              ╵                                         ┃ \n            ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ \n             0                                   1                                     2  \n                                                 [cm]                                     \n\n\n\n\n\n","category":"function"},{"location":"#WeatherReport.plot_box_solar","page":"User Guide","title":"WeatherReport.plot_box_solar","text":"plot_box_solar(city::String = \"\",\n               i_row::Int64 = 1;\n               lat::Float64 = 0.0,\n               long::Float64 = 0.0,\n               year::String = \"2022\")\n\nShows the monthly box plot distribution of shortwave solar radiation as average of the preceding hour for a given location (city or lat/long). This is equal to the total global horizontal irradiation.\n\nArguments\n\ncity::String : Valid city name, e.g. \"Oslo\", \"Paris\", \"Amsterdam\" etc.\ni_row::Int64 : In case of more than one match for a given location,                  select the desired timezone by providing the row index                  from the printed DataFrame. Default is set to 1.\nyear::String : Year for which data needs to be shown, e.g. \"2020\"\n\nOptional keywords\n\nlat::Float64 : Geographical WGS84 coordinate of the location (°S < 0, °N > 0)\nlong::Float64 : Geographical WGS84 coordinate of the location (°W < 0, °E > 0)\n\nExample\n\njulia> plot_box_solar(\"Canberra\", year = \"2023\")\n                         Canberra: Shortwave radiation distribution for 2023              \n             Timezone: Australia/Sydney                 [Weather data by Open-Meteo.com]  \n            ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ \n            ┃┌─┬───────────────┐                      ╷                                 ┃ \n    January ┃┤ │               ├──────────────────────┤                                 ┃ \n            ┃└─┴───────────────┘                      ╵                                 ┃ \n            ┃┌┬─────────────────┐                   ╷                                   ┃ \n   February ┃┤│                 ├───────────────────┤                                   ┃ \n            ┃└┴─────────────────┘                   ╵                                   ┃ \n            ┃┬─────────────┐                     ╷                                      ┃ \n      March ┃│             ├─────────────────────┤                                      ┃ \n            ┃┴─────────────┘                     ╵                                      ┃ \n            ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ \n             0                                 1 000                               2 000  \n                                               [W/m^2]                        \n\n\n\n\n\n","category":"function"},{"location":"#WeatherReport.plot_box_temp","page":"User Guide","title":"WeatherReport.plot_box_temp","text":"plot_box_temp(city::String = \"\",\n              i_row::Int64 = 1;\n              lat::Float64 = 0.0,\n              long::Float64 = 0.0,\n              year::String = \"2022\")\n\nShows the monthly boxplot distribution of hourly air temperature [°C] at 2 meter above ground for a given location (city or lat/long).\n\nArguments\n\ncity::String : Valid city name, e.g. \"Oslo\", \"Paris\", \"Amsterdam\" etc.\ni_row::Int64 : In case of more than one match for a given location,                  select the desired timezone by providing the row index                  from the printed DataFrame. Default is set to 1.\nyear::String : Year for which data needs to be shown, e.g. \"2020\"\n\nOptional keywords\n\nlat::Float64 : Geographical WGS84 coordinate of the location (°S < 0, °N > 0)\nlong::Float64 : Geographical WGS84 coordinate of the location (°W < 0, °E > 0)\n\nExample\n\njulia> plot_box_temp(\"Eindhoven\", year = \"2023\")\n                          Eindhoven: Air temp. monthly distribution for 2023              \n             Timezone: Europe/Amsterdam                 [Weather data by Open-Meteo.com]  \n            ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ \n            ┃               ╷           ┌─────────┬─────────┐                ╷          ┃ \n    January ┃               ├───────────┤         │         ├────────────────┤          ┃ \n            ┃               ╵           └─────────┴─────────┘                ╵          ┃ \n            ┃              ╷                 ┌──────┬─────┐        ╷                    ┃ \n   February ┃              ├─────────────────┤      │     ├────────┤                    ┃ \n            ┃              ╵                 └──────┴─────┘        ╵                    ┃ \n            ┃                ╷              ┌─────────┬───────┐              ╷          ┃ \n      March ┃                ├──────────────┤         │       ├──────────────┤          ┃ \n            ┃                ╵              └─────────┴───────┘              ╵          ┃ \n            ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ \n             -10                                 5                                    20  \n                                                 [°C]                                     \n\n\n\n\n\n","category":"function"},{"location":"#WeatherReport.plot_box_windspeed","page":"User Guide","title":"WeatherReport.plot_box_windspeed","text":"plot_box_windspeed(city::String = \"\",\n                   i_row::Int64 = 1;\n                   lat::Float64 = 0.0,\n                   long::Float64 = 0.0,\n                   year::String = \"2022\")\n\nShows the monthly box plot distribution of wind speed at 10 meter above ground for a given location (city or lat/long).\n\nArguments\n\ncity::String : Valid city name, e.g. \"Oslo\", \"Paris\", \"Amsterdam\" etc.\ni_row::Int64 : In case of more than one match for a given location,                  select the desired timezone by providing the row index                  from the printed DataFrame. Default is set to 1.\nyear::String : Year for which data needs to be shown, e.g. \"2020\"\n\nOptional keywords\n\nlat::Float64 : Geographical WGS84 coordinate of the location (°S < 0, °N > 0)\nlong::Float64 : Geographical WGS84 coordinate of the location (°W < 0, °E > 0)\n\nExample\n\njulia> plot_box_windspeed(\"Veldhoven\", year = \"2023\")\n                             Veldhoven: Wind speed distribution for 2023                  \n             Timezone: Europe/Amsterdam                 [Weather data by Open-Meteo.com]  \n            ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ \n            ┃ ╷                   ┌─────────┬──────────┐                          ╷     ┃ \n    January ┃ ├───────────────────┤         │          ├──────────────────────────┤     ┃ \n            ┃ ╵                   └─────────┴──────────┘                          ╵     ┃ \n            ┃  ╷           ┌──────┬───────────┐                                 ╷       ┃ \n   February ┃  ├───────────┤      │           ├─────────────────────────────────┤       ┃ \n            ┃  ╵           └──────┴───────────┘                                 ╵       ┃ \n            ┃ ╷                ┌────┬─────────────┐                                  ╷  ┃ \n      March ┃ ├────────────────┤    │             ├──────────────────────────────────┤  ┃ \n            ┃ ╵                └────┴─────────────┘                                  ╵  ┃ \n            ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ \n             0                                   20                                   40  \n                                                [km/h]                                    \n\n\n\n\n\n","category":"function"},{"location":"#WeatherReport.plot_hist_humidity","page":"User Guide","title":"WeatherReport.plot_hist_humidity","text":"plot_hist_humidity(city::String = \"\",\n                   i_row::Int64 = 1;\n                   lat::Float64 = 0.0,\n                   long::Float64 = 0.0,\n                   start_date::String = \"2023-01-01\",\n                   end_date::String = \"2023-01-10\")\n\nShows the relative humidity at 2 meter above ground for a given city between startdate and enddate.\n\nArguments\n\ncity::String : Valid city name, e.g. \"Oslo\", \"Paris\", \"Amsterdam\" etc.\ni_row::Int64 : In case of more than one match for a given location,                  select the desired timezone by providing the row index                  from the printed DataFrame. Default is set to 1.\nstart_date::String : Starting day in ISO8601 date format, e.g. \"2023-02-01\"\nend_date::String : Ending day in ISO8601 date format, e.g. \"2023-02-25\"\n\nOptional keywords\n\nlat::Float64 : Geographical WGS84 coordinate of the location (°S < 0, °N > 0)\nlong::Float64 : Geographical WGS84 coordinate of the location (°W < 0, °E > 0)\n\nExample\n\njulia> plot_hist_humidity(\"Chennai\", start_date = \"2022-01-01\", end_date = \"2022-12-31\")\n                         ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Chennai from 2022-01-01 to 2022-12-31⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ \n                         ⠀Timezone: Asia/Kolkata⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀[Weather data by Open-Meteo.com]⠀ \n                         ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ \n                     100 ┃⠀⠀⣄⠀⣠⠀⠀⡀⠀⠀⢠⠀⡄⢰⣧⣷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⡀⠀⠀⠀⠀⣠⡀⠀⠀⠀⠀⣀⠀⣠⣠⣴⠀⠀⠀⡀⢀⢀⠀⣦⡀⡀⠀⠀⠀⠀⣿┃ \n                         ┃⡇⣦⣿⣶⣿⡇⣿⡇⠀⠀⣿⢰⣿⢸⣿⣿⣿⣷⣶⣾⣰⠀⡀⣶⣆⣷⡆⣾⡆⠀⠀⠀⠀⠀⡄⣆⢠⡆⡀⠀⠀⣷⣿⣶⡇⠀⢰⠀⣦⣿⣷⣶⠀⠀⡄⣿⠀⣿⣿⣿⡇⣼⣿⣷⣼⣿⢰⣿⣿⣧⣾⣿⡄⢸⣿┃ \n                         ┃⣧⣿⣿⣿⣿⣷⣿⡇⠀⡀⣿⣼⣿⢸⣿⣿⣿⣿⣿⣿⣿⣼⣷⣿⣿⣿⣇⣿⣷⡀⠀⠀⡀⢀⣿⣿⣸⣧⣇⠀⣰⣿⣿⣿⣇⠀⢸⣶⣿⣿⣿⣿⣰⡇⡇⣿⣄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣼⣿⣿⣿⣿⣿⣿⣾⣿┃ \n                         ┃⣿⣿⣿⣿⣿⣿⣿⣿⣶⣿⣿⣿⣿⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡀⠀⡇⢸⣿⣿⣿⣿⣿⠀⣿⣿⣿⣿⣿⠀⣼⣿⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿┃ \n                         ┃⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⢰⣧⣼⣿⣿⣿⣿⣿⠀⣿⣿⣿⣿⣿⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣿⡇⣿⣿⣿⣿⣿⢿⣿⣿⡿⣿┃ \n                         ┃⣿⣿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣼⣿⣿⣿⣿⣿⣿⣿⡇⣿⣿⣿⣿⣿⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣿⡇⣿⡿⣿⣿⣿⢸⣿⣿⡇⣿┃ \n                         ┃⣿⣿⡏⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣿⣿⣿⣿⢿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⢿⣿⡇⣿⠁⢻⡇⠉⡿⢻⠀⢹⣿⡇⣿┃ \n   Rel. humidity [%]     ┃⣿⢿⡇⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⣿⣿⣿⣿⠸⣿⣿⣿⣿⡏⣿⢿⣿⣿⣿⡟⣿⠘⠋⠹⢸⣿⡇⢸⠀⢸⡇⠀⡇⠘⠀⠸⡟⡇⢿┃ \n                         ┃⠻⢸⠁⢸⣿⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⠀⣿⣿⣿⣿⠃⠋⠸⣿⣿⣿⡇⣿⠀⠀⠀⢸⡇⡇⠘⠀⠈⡇⠀⠃⠀⠀⠀⠇⠀⠸┃ \n                         ┃⠀⠈⠀⢸⣿⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣿⣿⣿⣿⣿⣿⡏⢿⣿⣿⣿⣿⣿⡟⢿⣿⣿⠉⣿⣿⠘⠇⢸⠀⣿⣿⣿⣿⠀⠀⠀⣿⣿⣿⡇⢸⠀⠀⠀⢸⡇⠇⠀⠀⠀⠇⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                         ┃⠀⠀⠀⠘⠈⠀⢸⢻⡿⢿⣿⣿⡏⣿⣿⣿⡿⢻⣿⡿⠇⣿⣿⣿⣿⢿⣿⠃⢸⣿⣿⣿⣿⣿⠁⠀⣿⣿⠀⢻⡿⠀⠀⠈⠀⣿⣿⣿⠇⠀⠀⠀⠀⣿⣿⠀⠈⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                         ┃⠀⠀⠀⠀⠀⠀⠀⠸⠁⠀⢸⣿⡇⢿⣿⣿⡇⠈⡇⠀⠀⢻⠈⣿⣿⢸⣿⠀⢸⡏⣿⣿⢻⣿⠀⠀⠃⠀⠀⢸⡇⠀⠀⠀⠀⢻⠇⠈⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                         ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠘⡿⡟⠀⠀⠁⠀⠀⠀⠀⠁⢻⠀⠁⠀⠘⠀⣿⠉⢸⡏⠀⠀⠀⠀⠀⢸⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                         ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠇⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠘⠀⠀⠀⠀⠀⠋⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⠀⠀⠀⠀⠀⠸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                      30 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                         ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ \n                         ⠀2022-01-01T00:00:00⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀2022-12-31T23:00:00⠀ \n                         ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Time [days]⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ \n\n\n\n\n\n","category":"function"},{"location":"#WeatherReport.plot_hist_rain","page":"User Guide","title":"WeatherReport.plot_hist_rain","text":"plot_hist_rain(city::String = \"\",\n               i_row::Int64 = 1;\n               lat::Float64 = 0.0,\n               long::Float64 = 0.0,\n               start_date::String = \"2023-01-01\",\n               end_date::String = \"2023-01-10\")\n\nShows the hourly rain from large scale weather systems  of the preceding hour in millimeter [mm] for a given  city between startdate and enddate.\n\nArguments\n\ncity::String : Valid city name, e.g. \"Oslo\", \"Paris\", \"Amsterdam\" etc.\ni_row::Int64 : In case of more than one match for a given location,                  select the desired timezone by providing the row index                  from the printed DataFrame. Default is set to 1.\nstart_date::String : Starting day in ISO8601 date format, e.g. \"2023-02-01\"\nend_date::String : Ending day in ISO8601 date format, e.g. \"2023-02-25\"\n\nOptional keywords\n\nlat::Float64 : Geographical WGS84 coordinate of the location (°S < 0, °N > 0)\nlong::Float64 : Geographical WGS84 coordinate of the location (°W < 0, °E > 0)\n\nExample\n\njulia> plot_hist_rain(\"Haldwani\", start_date = \"2022-01-01\", end_date = \"2022-12-31\")\n                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Haldwani from 2022-01-01 to 2022-12-31⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ \n                ⠀Timezone: Asia/Kolkata⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀[Weather data by Open-Meteo.com]⠀ \n                ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ \n             20 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n   Rain [mm]    ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⢸⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⢸⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⢸⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡆⣸⠀⠀⠀⢠⢸⡇⠀⡆⡄⠀⠀⠀⠀⠀⡄⢸⠀⠀⣼⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                ┃⠀⠀⠀⠀⠀⠀⠀⡇⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⣿⠀⢸⠀⢸⢸⣇⠀⡇⡇⠀⠀⠀⠀⡀⣷⣸⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                ┃⠀⡀⠀⠀⢰⠀⢠⡇⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣄⠀⢸⠀⠀⡆⠀⠀⠀⠀⠀⢸⣿⣿⢠⢸⣇⢸⣿⣿⢰⡇⣷⡇⣦⣶⢀⣿⣿⣿⠀⠀⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n              0 ┃⣸⣷⣆⣀⣾⣀⣸⣇⣇⣀⣀⣆⣀⣀⣀⣠⣀⣀⣀⣀⣀⣇⣸⣀⣠⣿⣿⣸⣤⣆⣧⣀⣀⣀⣤⣀⣿⣿⣿⣿⣾⣿⣾⣿⣿⣿⣇⣿⣧⣿⣿⣼⣿⣿⣿⣆⣶⡟⣇⣰⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀┃ \n                ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ \n                ⠀2022-01-01T00:00:00⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀2022-12-31T23:00:00⠀ \n                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Time [days]⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ \n\n\n\n\n\n","category":"function"},{"location":"#WeatherReport.plot_hist_snow","page":"User Guide","title":"WeatherReport.plot_hist_snow","text":"plot_hist_snow(city::String = \"\",\n               i_row::Int64 = 1;\n               lat::Float64 = 0.0,\n               long::Float64 = 0.0,\n               start_date::String = \"2023-01-01\",\n               end_date::String = \"2023-01-10\")\n\nShows the snowfall amount for the preceding hour in centimeter [cm] for a given location (city or lat/long).\n\nArguments\n\ncity::String : Valid city name, e.g. \"Oslo\", \"Paris\", \"Amsterdam\" etc.\ni_row::Int64 : In case of more than one match for a given location,                  select the desired timezone by providing the row index                  from the printed DataFrame. Default is set to 1.\nstart_date::String : Starting day in ISO8601 date format, e.g. \"2023-02-01\"\nend_date::String : Ending day in ISO8601 date format, e.g. \"2023-02-25\"\n\nOptional keywords\n\nlat::Float64 : Geographical WGS84 coordinate of the location (°S < 0, °N > 0)\nlong::Float64 : Geographical WGS84 coordinate of the location (°W < 0, °E > 0)\n\nExample\n\njulia> plot_hist_snow(\"Tromso\", start_date = \"2022-01-01\", end_date = \"2022-12-31\")\n                   ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Tromso from 2022-01-01 to 2022-12-31⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ \n                   ⠀Timezone: Europe/Oslo⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀[Weather data by Open-Meteo.com]⠀ \n                   ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ \n                 3 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                   ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                   ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                   ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                   ┃⠀⠀⠀⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                   ┃⠀⠀⠀⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                   ┃⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n   Snowfall [cm]   ┃⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                   ┃⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⢰⠀⠀⠀⢸⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                   ┃⠀⠀⢸⣿⢠⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⢸⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣷⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀┃ \n                   ┃⠀⠀⣿⣿⢸⠀⠀⠀⠀⠀⠀⢸⡀⠀⠀⢸⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⢀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀┃ \n                   ┃⡀⠀⣿⣿⣿⠀⠀⠀⠀⠀⠀⢸⡇⡄⠀⢸⢸⠀⠀⠀⠀⠀⠀⢠⢸⠀⡇⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⢀⠀⠀⢸⠀⠀⠀⠀⣼⠀⠀⠀⣄⡀┃ \n                   ┃⡇⡄⣿⣿⣿⠀⠀⠀⡀⠀⠀⣿⣧⡇⠀⢸⣾⠀⠀⠀⠀⢀⠀⢸⢸⢸⣧⢀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⢸⠀⠀⢸⠀⠀⠀⠀⣿⠀⢀⠀⣿⡇┃ \n                   ┃⣷⣧⣿⣿⣿⣤⠀⡄⡇⡆⠀⣿⣿⡇⡀⢸⣿⣦⣰⠀⠀⣾⠀⢸⣾⣼⣿⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⢀⣿⣼⡆⢀⢸⠀⠀⠀⢰⣿⠀⢸⣄⣿⡇┃ \n                 0 ┃⣿⣿⣿⣿⣿⣿⣆⣷⣷⣇⣀⣿⣿⣷⣇⣸⣿⣿⣿⣄⣶⣿⣀⣾⣿⣿⣿⣼⣇⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣇⣸⣿⣿⣇⣸⣸⣀⣀⣀⣸⣿⣀⣾⣿⣿⣿┃ \n                   ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ \n                   ⠀2022-01-01T00:00:00⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀2022-12-31T23:00:00⠀ \n                   ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Time [days]⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ \n\n\n\n\n\n","category":"function"},{"location":"#WeatherReport.plot_hist_solar","page":"User Guide","title":"WeatherReport.plot_hist_solar","text":"plot_hist_solar(city::String = \"\",\n                i_row::Int64 = 1;\n                lat::Float64 = 0.0,\n                long::Float64 = 0.0,\n                start_date::String = \"2023-01-01\",\n                end_date::String = \"2023-01-10\")\n\nShows the shortwave solar radiation as average of the preceding hour for a given location (city or lat/long) between startdate and enddate. This is equal to the total global horizontal irradiation.\n\nArguments\n\ncity::String : Valid city name, e.g. \"Oslo\", \"Paris\", \"Amsterdam\" etc.\ni_row::Int64 : In case of more than one match for a given location,                  select the desired timezone by providing the row index                  from the printed DataFrame. Default is set to 1.\nstart_date::String : Starting day in ISO8601 date format, e.g. \"2023-02-01\"\nend_date::String : Ending day in ISO8601 date format, e.g. \"2023-02-25\"\n\nOptional keywords\n\nlat::Float64 : Geographical WGS84 coordinate of the location (°S < 0, °N > 0)\nlong::Float64 : Geographical WGS84 coordinate of the location (°W < 0, °E > 0)\n\nExample\n\njulia> plot_hist_solar(\"Veldhoven\", start_date = \"2022-01-01\", end_date = \"2022-12-31\")\n                                   ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Veldhoven from 2022-01-01 to 2022-12-31⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ \n                                   ⠀Timezone: Europe/Amsterdam⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀[Weather data by Open-Meteo.com]⠀ \n                                   ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ \n                               900 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⢠⡆⡀⢀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                                   ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢀⡀⡆⣸⣿⢸⠀⡆⡄⢸⠀⣼⡇⣇⢸⠀⠀⢠⣾⣷⣆⡀⠀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                                   ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣇⡇⣿⣿⣼⡇⡇⣷⣾⠀⣿⡇⣿⢸⣄⠀⢸⣿⣿⣿⣇⣶⣿⡇⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                                   ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⢸⣿⣿⣿⣿⣿⣿⡇⡇⣿⣿⣆⣿⣷⣿⢸⣿⡆⢸⣿⣿⣿⣿⣿⣿⡇⠀⢸⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                                   ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣼⣿⢀⣸⣿⣼⣿⣿⣿⣿⣿⣿⡇⣇⣿⣿⣿⣿⣿⣿⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⣴⣾⣦⣷⡄⡆⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                                   ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣄⢸⣿⣿⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⣿⣿⣿⣿⣿⣿⣿⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⡇⡀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                                   ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⣿⣿⢸⣿⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⡇⡇⣿⢸⢸⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n   Shortwave radiation [W/m^2]     ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣇⣷⣿⢸⣾⣿⡇⣴⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                                   ┃⠀⠀⠀⠀⠀⠀⠀⠀⢸⣤⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣿⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                                   ┃⠀⠀⠀⠀⠀⠀⠀⢀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣿⠀⣀⣼⡄⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                                   ┃⠀⠀⠀⠀⢸⢠⡇⣼⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣿⣸⣿⣿⡇⣿⣷⢠⡄⠀⠀⠀⠀⠀⠀⠀┃ \n                                   ┃⠀⣶⣿⢀⣾⢸⡇⣿⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣿⣿⣿⣿⣇⣿⣿⣸⣷⠀⡀⢰⣿⠀⠀⡄┃ \n                                   ┃⣧⣿⣿⣼⣿⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢠⣿⣸⣿⣇⣄⣧┃ \n                                   ┃⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿┃ \n                                 0 ┃⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿┃ \n                                   ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ \n                                   ⠀2022-01-01T00:00:00⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀2022-12-31T23:00:00⠀ \n                                   ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Time [days]⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ \n\n\n\n\n\n","category":"function"},{"location":"#WeatherReport.plot_hist_temp","page":"User Guide","title":"WeatherReport.plot_hist_temp","text":"plot_hist_temp(city::String = \"\",\n               i_row::Int64 = 1;\n               lat::Float64 = 0.0,\n               long::Float64 = 0.0,\n               start_date::String = \"2023-01-01\",\n               end_date::String = \"2023-01-10\")\n\nShows the hourly air temperature [°C] at 2 meter above ground and 'feels like' temperature for a given city between startdate and enddate.\n\nArguments\n\ncity::String : Valid city name, e.g. \"Oslo\", \"Paris\", \"Amsterdam\" etc.\ni_row::Int64 : In case of more than one match for a given location,                  select the desired timezone by providing the row index                  from the printed DataFrame. Default is set to 1.\nstart_date::String : Starting day in ISO8601 date format, e.g. \"2023-02-01\"\nend_date::String : Ending day in ISO8601 date format, e.g. \"2023-02-25\"\n\nOptional keywords\n\nlat::Float64 : Geographical WGS84 coordinate of the location (°S < 0, °N > 0)\nlong::Float64 : Geographical WGS84 coordinate of the location (°W < 0, °E > 0)\n\nExample\n\njulia> plot_hist_temp(\"Veldhoven\", start_date = \"2022-01-01\", end_date = \"2022-12-31\")\n             ⠀⠀⠀⠀⠀⠀Veldhoven: min -5.9 °C, max 36.4 °C from 2022-01-01 to 2022-12-31)⠀⠀⠀⠀⠀                \n             ⠀Timezone: Europe/Amsterdam⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀[Weather data by Open-Meteo.com]⠀                \n             ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓                \n        36.4 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ Air temperature\n             ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⢠⠀⠀⠀⠀⢸⡇⡀⠀⡄⢠⡄⠀⣾⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ Feels like     \n             ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⣼⢸⠀⠀⠀⢰⢸⡇⡇⢠⡇⢸⣇⠀⣿⠀⢸⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃                \n             ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡇⠀⠀⢀⠀⠀⣿⣼⢰⡀⠀⣸⢸⣿⣇⣾⡇⣿⣿⣴⣿⢀⣿⡇⣠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃                \n             ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣼⣇⡇⠀⢸⢠⣤⣿⣿⣾⣷⣠⣿⣼⣿⣿⣿⣿⣿⣿⣿⣿⣼⣿⣇⣿⠀⠀⠀⠀⡀⠀⠀⠀⢠⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃                \n             ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⢸⠀⡀⠀⠀⢸⣿⣿⣿⣷⢠⣾⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⣀⠀⢀⡇⡀⣀⣤⣼⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃                \n             ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠀⣾⣶⠀⠀⢸⣷⣷⣇⣼⣿⣿⣿⣿⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢻⢿⣿⢻⡿⠛⣿⢻⣿⣿⣿⣿⣠⣿⣀⣾⣷⣇⣿⣿⣿⣧⠀⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠┃                \n   [°C]      ┃⡆⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⢠⣿⣧⣿⣿⡆⣄⢸⣿⣿⣿⣿⣿⣿⣿⢹⣿⣿⣿⣿⣿⣿⡏⢻⣿⣿⡟⣿⠘⢸⠇⢸⡇⠀⢸⠀⡟⠃⠸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⢸┃                \n             ┃⣷⠀⠀⠀⠀⢰⣀⣸⣦⣾⣴⣇⣴⣸⣿⣿⣿⣿⡇⣿⣾⣿⣿⣿⣿⣿⡿⣿⢸⣿⣿⡿⠛⣿⠛⡇⠘⠻⡟⠃⢻⠀⠈⠀⢸⠀⠀⠈⠀⠃⠀⠀⠈⣿⣿⣿⣿⣿⣿⢿⡏⠋⣿⣿⣿⣿⣄⣷⡆⠀⠀⠀⣰⣷⣿┃                \n             ┃⣿⣠⠀⣇⣆⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⣿⣿⣿⣿⣿⣿⡿⡇⠇⠈⠿⣿⡇⠀⠸⠀⠃⠀⠀⠀⠀⠈⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⢻⡟⣿⢻⢻⡟⢸⠁⠀⠹⣿⢿⣿⣿⣿⣷⢀⠀⠀⣿⣿⣿┃                \n             ┃⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢿⣿⠃⠁⠀⠀⠀⠁⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⢻⠀⢸⡇⠈⠀⠀⠀⡟⢸⡟⣿⣿⢻⣸⡆⠀⡿⢻⣿┃                \n             ┃⣸⣿⣿⣿⣿⣿⣇⣿⣿⣟⣿⣿⣿⣿⣇⣿⣿⣿⣿⣿⣿⣹⣃⣘⣙⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣈⣀⣘⣇⣀⣀⣀⣀⣃⣀⣇⣿⣸⣸⣿⣿⣴⣇⣸⣿┃                \n             ┃⢸⣿⣿⡟⣿⡏⠇⠻⢻⠀⢿⣿⢿⣿⠇⢸⠟⠀⣿⡇⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠇⠀⠸⡟⣿⣿⡇⠈⠁┃                \n             ┃⠀⠹⠃⠀⠸⠀⠀⠀⠸⠀⠀⢸⠸⣿⠀⠀⠀⠀⢹⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⢸⣿⡇⠀⠀┃                \n        -9.8 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⡇⠀⠀┃                \n             ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛                \n             ⠀2022-01-01T00:00:00⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀2022-12-31T23:00:00⠀                \n             ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Time [days]⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀                \n\n\n\n\n\n","category":"function"},{"location":"#WeatherReport.plot_hist_windspeed","page":"User Guide","title":"WeatherReport.plot_hist_windspeed","text":"plot_hist_windspeed(city::String = \"\",\n                    i_row::Int64 = 1;\n                    lat::Float64 = 0.0,\n                    long::Float64 = 0.0,\n                    start_date::String = \"2023-01-01\",\n                    end_date::String = \"2023-01-10\")\n\nShows the wind speed at 10 meter above ground for a given city between startdate and enddate.\n\nArguments\n\ncity::String : Valid city name, e.g. \"Oslo\", \"Paris\", \"Amsterdam\" etc.\ni_row::Int64 : In case of more than one match for a given location,                  select the desired timezone by providing the row index                  from the printed DataFrame. Default is set to 1.\nstart_date::String : Starting day in ISO8601 date format, e.g. \"2023-02-01\"\nend_date::String : Ending day in ISO8601 date format, e.g. \"2023-02-25\"\n\nOptional keywords\n\nlat::Float64 : Geographical WGS84 coordinate of the location (°S < 0, °N > 0)\nlong::Float64 : Geographical WGS84 coordinate of the location (°W < 0, °E > 0)\n\nExample\n\njulia> plot_hist_windspeed(\"Veldhoven\", start_date = \"2022-01-01\", end_date = \"2022-12-31\")\n                        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Veldhoven from 2022-01-01 to 2022-12-31⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ \n                        ⠀Timezone: Europe/Amsterdam⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀[Weather data by Open-Meteo.com]⠀ \n                        ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ \n                     60 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                        ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                        ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                        ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                        ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                        ┃⠀⠀⠀⠀⠀⠀⡇⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀┃ \n                        ┃⡄⠀⠀⠀⠀⠀⡇⣶⠀⢸⣿⡆⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸┃ \n   Wind speed [km/h]    ┃⡇⢀⠀⠀⠀⢠⡇⣿⠀⣾⣿⡇⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡄⠀⠀⠀⢠⠀⢀⡄⠀⢠⠀⠀⠀⠀⠀⠀⠀⡀⣿┃ \n                        ┃⣿⢸⠀⠀⠀⢸⣷⣿⢠⣿⣿⡇⠀⠀⠀⠀⠀⠀⢸⣿⡀⠀⠀⠀⠀⠀⢸⠀⠀⣰⠀⠀⡇⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡆⠀⡄⡇⡇⠀⠀⢸⠀⢸⣧⡇⢸⠀⠀⠀⠀⠀⠀⣄⣧⣿┃ \n                        ┃⣿⣿⠀⠀⡄⣿⣿⣿⣾⣿⣿⡇⠀⠀⡇⣸⡄⠀⣾⣿⡇⠀⢸⡇⠀⠀⢸⡀⣠⣿⡇⢀⡇⠀⢸⠀⠀⡄⣷⡀⠀⡇⡇⣷⢰⠀⠀⠀⠀⠀⠀⢸⠀⡇⠀⡇⡇⡇⠀⠀⢸⡀⣿⣿⡇⢸⢰⡆⢠⠀⠀⠀⣿⣿⣿┃ \n                        ┃⣿⣿⠀⣷⡇⣿⣿⣿⣿⣿⣿⣿⠀⣸⣿⣿⡇⠀⣿⣿⣧⠀⢸⣧⠀⠀⢸⣿⣿⣿⣧⢸⣷⣰⢸⢀⡆⣿⣿⣷⡀⡇⡇⣿⣼⠀⢀⠀⢰⣸⡀⣿⢠⣿⠀⡇⣿⣧⠀⣧⣿⣇⣿⣿⣿⣾⣸⣧⣸⡄⠀⠀⣿⣿⣿┃ \n                        ┃⣿⣿⢰⣿⡇⣿⣿⠈⣿⡿⢸⣿⣸⣿⣿⣿⡇⣆⣿⣿⣿⣼⣿⣿⣇⡇⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣿⣿⣿⣿⡇⣇⣿⣿⣿⣿⣾⣿⣼⣿⡇⣿⢸⣿⢠⣷⣿⣿⣶⣿⣿⣿⡇⡏⢹⣿⣿⢿⣿⣇⡆⡄⣿⣿⠋┃ \n                        ┃⣿⣿⣿⣿⢧⣿⣿⠀⣿⠃⠘⣿⣿⣿⣿⣿⣿⣿⣿⡇⣿⣿⡿⣿⣿⣧⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⡇⣿⣿⣼⢹⣸⣿⣿⣿⣿⣿⣿⣿⡇⡇⢸⡟⣿⠘⣿⢿⣷⣷⣿⣿⠀┃ \n                        ┃⢹⠹⡿⣿⢸⡇⢹⠀⠿⠀⠀⢹⡟⡿⢸⣿⣿⢿⢿⠃⣿⡇⠇⢿⢸⣿⡟⣿⣿⡏⠹⣿⠟⢿⢿⢿⣿⢿⣿⣿⣿⣿⠻⡿⣿⠁⣿⣿⣿⡇⢹⣿⣿⠘⣿⢿⢻⠻⣿⣿⠛⢹⡇⡇⢸⠃⡟⠀⡟⢸⣿⣿⢿⢹⠀┃ \n                      0 ┃⠀⠀⠃⠸⠸⡇⠀⠀⠀⠀⠀⠸⠁⠀⠀⠁⠟⠸⠀⠀⠟⠃⠀⠀⠸⢹⠇⠁⠀⠁⠀⠻⠀⠈⠘⠸⡏⠘⠏⠸⠘⠹⠀⠇⠁⠀⠻⠛⠏⠀⠸⠃⣿⠀⠋⠸⠈⠀⠃⠘⠀⠘⠃⠁⠈⠀⠃⠀⠁⠈⠏⠹⠀⠈⠀┃ \n                        ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ \n                        ⠀2022-01-01T00:00:00⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀2022-12-31T23:00:00⠀ \n                        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Time [days]⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n\n\n\n\n\n","category":"function"},{"location":"#WeatherReport.plot_hourly_dust","page":"User Guide","title":"WeatherReport.plot_hourly_dust","text":"plot_hourly_dust(city::String = \"\",\n                 i_row::Int64 = 1;\n                 lat::Float64 = 0.0,\n                 long::Float64 = 0.0,\n                 days::Int64 = 6)\n\nShows the hourly Saharan dust particles [μg/cm^3] for a given city.\n\nArguments\n\ncity::String : Valid city name, e.g. \"Oslo\", \"Paris\", \"Amsterdam\" etc.\ni_row::Int64 : In case of more than one match for a given location,\n\nselect the desired timezone by providing the row index from the printed DataFrame. Default is set to 1.\n\nOptional keywords\n\nlat::Float64 : Geographical WGS84 coordinate of the location (°S < 0, °N > 0)\nlong::Float64 : Geographical WGS84 coordinate of the location (°W < 0, °E > 0)\ndays::Int64 : Number of days for which data are returned. Default is 6\n\ndays, which is also the maximum.\n\nExample\n\njulia> plot_hourly_dust(\"Dubai\", days = 2)\n                    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Dubai⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ \n                    ⠀Timezone: Asia/Dubai⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀[Weather data by Open-Meteo.com]⠀ \n                    ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ \n                 80 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                    ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠁⠀⠉⢆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                    ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠜⠀⠀⠀⠀⠈⢢⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                    ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⠀⠀⠀⠀⠀⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                    ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠓⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                    ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠤⠔⠒⠊⠉⠉⠒⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠜⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⠤⣀⠀⠀⠀⠀⠀⣀⡠⠔┃ \n                    ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠤⠒⠒⠉⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠉⠉⠀⠀⠀┃ \n   dust [μg/m^3]    ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                    ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠱⣀⣀⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                    ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                    ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                    ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                    ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                    ┃⠀⠀⠀⠀⠀⠀⣀⣀⣀⠤⠤⠤⠤⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                 10 ┃⠤⠒⠒⠒⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                    ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ \n                    ⠀2023-03-19T18:00:00⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀2023-03-21T17:00:00⠀ \n                    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Time [days]⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ \n\n\n\n\n\n","category":"function"},{"location":"#WeatherReport.plot_hourly_haze","page":"User Guide","title":"WeatherReport.plot_hourly_haze","text":"plot_hourly_haze(city::String = \"\",\n                 i_row::Int64 = 1;\n                 lat::Float64 = 0.0,\n                 long::Float64 = 0.0,\n                 days::Int64 = 6)\n\nShows the hourly Aerosol Optical Depth (AOD) at 550 nm of the entire atmosphere for a given location (city or lat/long). A value of 0.01 corresponds to an extremely clean atmosphere, and a value of 0.4 would correspond to a very hazy condition. (https://gml.noaa.gov/grad/surfrad/aod/)\n\nArguments\n\ncity::String : Valid city name, e.g. \"Oslo\", \"Paris\", \"Amsterdam\" etc.\ni_row::Int64 : In case of more than one match for a given location,\n\nselect the desired timezone by providing the row index from the printed DataFrame. Default is set to 1.\n\nOptional keywords\n\nlat::Float64 : Geographical WGS84 coordinate of the location (°S < 0, °N > 0)\nlong::Float64 : Geographical WGS84 coordinate of the location (°W < 0, °E > 0)\ndays::Int64 : Number of days for which data are returned. Default is 6\n\ndays, which is also the maximum.\n\nExample\n\nulia> plot_hourly_haze(\"Haldwani\", days = 2)\n                                 ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Haldwani⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ \n                                 ⠀Timezone: Asia/Kolkata⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀[Weather data by Open-Meteo.com]⠀ \n                                 ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ \n                             0.4 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                                 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                                 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                                 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠊⢣⠀⠀⠀⠀⠀⠀⠀┃ \n                                 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠳⡀⠀⠀⠀⠀⠀┃ \n                                 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠱⡀⠀⠀⠀⠀┃ \n                                 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⣀⡀⠀⠀⠀⠀⠀⣀⣀⠔⠉⠉⠑⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠉⢢⣀⡠⠊┃ \n    Aerosol Optical Depth []     ┃⠤⠤⠤⠤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠊⠀⠀⠀⠀⠈⠦⠤⠤⠤⠊⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                                 ┃⠀⠀⠀⠀⠘⠢⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                                 ┃⠀⠀⠀⠀⠀⠀⠈⠢⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                                 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠈⠢⠤⠤⡀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠣⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                                 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠒⠒⠒⠒⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠓⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                                 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⣄⣀⣀⠀⠀⣀⣀⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                                 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠱⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                             0.2 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                                 ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ \n                                 ⠀2023-04-12T17:00:00⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀2023-04-14T16:00:00⠀ \n                                 ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Time [days]\n\n\n\n\n\n","category":"function"},{"location":"#WeatherReport.plot_hourly_humidity","page":"User Guide","title":"WeatherReport.plot_hourly_humidity","text":"plot_hourly_humidity(city::String = \"\",\n                     i_row::Int64 = 1;\n                     lat::Float64 = 0.0,\n                     long::Float64 = 0.0,\n                     days::Int64 = 6)\n\nShows the relative humidity at 2 meter above ground for a given city.\n\nArguments\n\ncity::String : Valid city name, e.g. \"Oslo\", \"Paris\", \"Amsterdam\" etc.\ni_row::Int64 : In case of more than one match for a given location,                  select the desired timezone by providing the row index                  from the printed DataFrame. Default is set to 1.\n\nOptional keywords\n\nlat::Float64 : Geographical WGS84 coordinate of the location (°S < 0, °N > 0)\nlong::Float64 : Geographical WGS84 coordinate of the location (°W < 0, °E > 0)\ndays::Int64 : Number of days for which data are returned. Default is 6                 days, which is also the maximum.\n\nExample\n\njulia> plot_hourly_humidity(\"Veldhoven\", days = 3)\n                        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Veldhoven⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ \n                        ⠀Timezone: Europe/Amsterdam⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀[Weather data by Open-Meteo.com]⠀ \n                        ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ \n                     90 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                        ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠜⠀⠀⠉⠉⠉⠉⢆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠴⠒⠒⠒⠒⠒⠱⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                        ┃⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠈⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠊⠉⠀⠀⠀⠀⠀⠀⠀⠀⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                        ┃⠀⡠⠔⠊⠉⠢⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢱⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                        ┃⡔⠁⠀⠀⠀⠀⠈⠦⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⡴⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢱⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀┃ \n                        ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢲⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠊┃ \n                        ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢇⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀┃ \n   Rel. humidity [%]    ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀┃ \n                        ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢇⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⡀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀┃ \n                        ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀┃ \n                        ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢇⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀┃ \n                        ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢱⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⡄⠀⠀⠀⢰⠁⠀⠀⠀⠀┃ \n                        ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡆⠀⠀⠀⠀⢰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⠤⢄⡰⠁⠀⠀⠀⠀⠀┃ \n                        ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢱⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                     40 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠢⣀⣀⡠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                        ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ \n                        ⠀2023-02-25T22:00:00⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀2023-02-28T21:00:00⠀ \n                        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Time [days]⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ \n\n\n\n\n\n","category":"function"},{"location":"#WeatherReport.plot_hourly_pm","page":"User Guide","title":"WeatherReport.plot_hourly_pm","text":"plot_hourly_pm(city::String = \"\",\n               i_row::Int64 = 1;\n               lat::Float64 = 0.0,\n               long::Float64 = 0.0,\n               days::Int64 = 6)\n\nShows the hourly particulate matter [μg/cm^3] with diameter smaller than 10 μm and smaller than 2.5 μm at 10 meter above ground for a given city/location.\n\nArguments\n\ncity::String : Valid city name, e.g. \"Oslo\", \"Paris\", \"Amsterdam\" etc.\ni_row::Int64 : In case of more than one match for a given location,                  select the desired timezone by providing the row index                  from the printed DataFrame. Default is set to 1.\n\nOptional keywords\n\nlat::Float64 : Geographical WGS84 coordinate of the location (°S < 0, °N > 0)\nlong::Float64 : Geographical WGS84 coordinate of the location (°W < 0, °E > 0)\ndays::Int64 : Number of days for which data are returned. Default is 6                 days, which is also the maximum.\n\nExample\n\njulia> plot_hourly_pm(\"Veldhoven\", days = 3)\n                 ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Veldhoven⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀                      \n                 ⠀Timezone: Europe/Amsterdam⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀[Weather data by Open-Meteo.com]⠀                      \n                 ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓                      \n            27.5 ┃⠀⠀⠀⠀⠀⠀⠀⣇⠀⠀⠀⠀⠀⡰⢤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ Part. matter < 10 μm \n                 ┃⠀⠀⠀⠀⡖⢇⢰⢹⠀⠀⠀⠀⢰⢱⢤⢇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⢣⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ Part. matter < 2.5 μm\n                 ┃⠀⠀⠀⢸⠀⠸⣸⢸⠀⠀⠀⢠⠃⡇⠀⡟⠒⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠈⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃                      \n                 ┃⠀⠀⠀⡜⠀⠀⠇⠈⡆⠀⢀⠎⢸⠀⠀⢸⠀⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⠀⠀⠀⠀⠸⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃                      \n                 ┃⠀⠀⢀⠇⢀⡄⠀⠀⡇⠀⡜⢀⠇⠀⠀⠀⡇⠐⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⢠⣀⣀⠀⠀⢇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃                      \n                 ┃⣀⣔⠥⠔⠁⠘⣄⠀⠣⣰⢁⠜⠀⠀⠀⠀⢣⠀⠘⢆⠀⠀⠀⠀⠀⠀⠀⠀⡼⠀⠀⡠⠃⠀⠀⢣⡀⠸⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃                      \n                 ┃⠀⡎⠀⠀⠀⠀⠀⠱⡀⣠⠃⠀⠀⠀⠀⠀⠸⡀⠀⠈⠑⡄⠀⠀⠀⠀⠀⢰⠁⠀⡎⠀⠀⠀⠀⠀⠈⢆⢱⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃                      \n   [μg/m^3]      ┃⡸⠀⠀⠀⠀⠀⠀⠀⠋⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠀⠘⡄⠀⠀⠀⢀⠇⠀⡸⠀⠀⠀⠀⠀⠀⠀⠘⢆⢣⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃                      \n                 ┃⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⠘⠔⢢⢀⠎⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠈⠢⡑⠔⠉⠊⠑⠢⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃                      \n                 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⠀⠀⠋⡠⠊⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠢⠤⢄⠀⠀⠈⠒⢄⠔⢄⣀⠀⠀⠀⠀⠀⠀⡔⠉⠀⠱⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃                      \n                 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠢⣀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⠢⣀⠀⠀⠀⠀⠀⢣⣀⡠⠤⠔⠊⠀⠀⠀⠀⠉⢢⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎┃                      \n                 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠑⢄⡀⢀⠔⠊⠉⠉⠉⠉⠑⠤⢄⣀⣓⠑⢄⠀⠀⠀⠀⠀⢀⠎⠀┃                      \n                 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠱⡘⡄⠀⠀⠀⢀⠎⠀⠀┃                      \n                 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠱⡘⢄⣀⡠⠊⠀⠀⠀┃                      \n             4.1 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠢⠤⠔⢄⡰⠊⠉┃                      \n                 ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛                      \n                 ⠀2023-03-19T17:00:00⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀2023-03-22T16:00:00⠀                      \n                 ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Time [days]⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀          \n\n\n\n\n\n","category":"function"},{"location":"#WeatherReport.plot_hourly_rain","page":"User Guide","title":"WeatherReport.plot_hourly_rain","text":"plot_hourly_rain(city::String = \"\",\n                 i_row::Int64 = 1;\n                 lat::Float64 = 0.0,\n                 long::Float64 = 0.0,\n                 days::Int64 = 6)\n\nShows the hourly rain from large scale weather systems of the preceding hour in millimeter [mm] for a given city.\n\nArguments\n\ncity::String : Valid city name, e.g. \"Oslo\", \"Paris\", \"Amsterdam\" etc.\ni_row::Int64 : In case of more than one match for a given location,                  select the desired timezone by providing the row index                  from the printed DataFrame. Default is set to 1.\n\nOptional keywords\n\nlat::Float64 : Geographical WGS84 coordinate of the location (°S < 0, °N > 0)\nlong::Float64 : Geographical WGS84 coordinate of the location (°W < 0, °E > 0)\ndays::Int64 : Number of days for which data are returned. Default is 6                 days, which is also the maximum.\n\nExample\n\njulia> plot_hourly_rain(\"London\", 2, days = 5)\n[ Info: More than one match found, showing report for location in row 2.\n[ Info: You can select another location by its row index.\n6×4 DataFrame\n Row │ CITY     TIMEZONE             LATITUDE  LONGITUDE  \n     │ String?  String31             Float64   Float64    \n─────┼────────────────────────────────────────────────────\n   1 │ London   America/Toronto       42.9834   -81.233\n   2 │ London   Europe/London         51.5085    -0.12574\n   3 │ London   America/Chicago       35.329    -93.253\n   4 │ London   America/New_York      37.129    -84.0833\n   5 │ London   America/New_York      39.8865   -83.4483\n   6 │ London   America/Los_Angeles   36.4761  -119.443\n               ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀London⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ \n               ⠀Timezone: Europe/London⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀[Weather data by Open-Meteo.com]⠀ \n               ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ \n             2 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n               ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n               ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n               ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n               ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n               ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n               ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡏⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n   Rain [mm]   ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n               ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n               ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n               ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n               ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n               ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⢱⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n               ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n             0 ┃⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⢦⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⡇⠀⠀⢇⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀┃ \n               ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ \n               ⠀2023-02-25T19:00:00⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀2023-03-02T18:00:00⠀ \n               ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Time [days]⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀  \n\n\n\n\n\n","category":"function"},{"location":"#WeatherReport.plot_hourly_snow","page":"User Guide","title":"WeatherReport.plot_hourly_snow","text":"plot_hourly_snow(city::String = \"\",\n                 i_row::Int64 = 1;\n                 lat::Float64 = 0.0,\n                 long::Float64 = 0.0,\n                 days::Int64 = 6)\n\nShows the snowfall amount for the preceding hour in  centimeter [cm] for a given city.\n\nArguments\n\ncity::String : Valid city name, e.g. \"Oslo\", \"Paris\", \"Amsterdam\" etc.\ni_row::Int64 : In case of more than one match for a given location,                  select the desired timezone by providing the row index                  from the printed DataFrame. Default is set to 1.\n\nOptional keywords\n\nlat::Float64 : Geographical WGS84 coordinate of the location (°S < 0, °N > 0)\nlong::Float64 : Geographical WGS84 coordinate of the location (°W < 0, °E > 0)\ndays::Int64 : Number of days for which data are returned. Default is 6                 days, which is also the maximum.\n\nExample\n\njulia> plot_hourly_snow(\"Tromso\", days = 3)\n                     ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Tromso⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ \n                     ⠀Timezone: Europe/Oslo⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀[Weather data by Open-Meteo.com]⠀ \n                     ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ \n                 0.7 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                     ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                     ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                     ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                     ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                     ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⡜⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                     ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⡇⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n   Snowfall [cm]     ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡟⡄⠀⠀⠀⡇⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                     ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⡇⠀⠀⠀⡇⡇⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                     ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⡇⠀⠀⠀⡇⢸⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                     ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⡇⢠⠀⠀⡇⢸⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                     ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⡇⣼⠀⠀⡇⢸⢸⢇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀┃ \n                     ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⡇⡇⡇⢠⠃⢸⡇⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⡆⠀⠀⠀⠀┃ \n                     ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⢱⠇⡇⢸⠀⢸⡇⢸⠀⠀⠀⡄⠀⠀⠀⠀⡤⠤⠤⠴⠁⢸⠀⠀⠀⠀┃ \n                   0 ┃⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣸⠀⢸⠀⢸⣸⠀⢸⠇⠸⣀⣀⡸⠸⣀⣀⣀⣰⠁⠀⠀⠀⠀⠀⢇⣀⣀⣀┃ \n                     ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ \n                     ⠀2023-02-25T19:00:00⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀2023-02-28T18:00:00⠀ \n                     ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Time [days]⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ \n\n\n\n\n\n","category":"function"},{"location":"#WeatherReport.plot_hourly_solar","page":"User Guide","title":"WeatherReport.plot_hourly_solar","text":"plot_hourly_solar(city::String = \"\",\n                  i_row::Int64 = 1;\n                  lat::Float64 = 0.0,\n                  long::Float64 = 0.0,\n                  days::Int64 = 6)\n\nShows the shortwave solar radiation as average of the preceding hour.  This is equal to the total global horizontal irradiation \n\nArguments\n\ncity::String : Valid city name, e.g. \"Oslo\", \"Paris\", \"Amsterdam\" etc.\ni_row::Int64 : In case of more than one match for a given location,\n\nselect the desired timezone by providing the row index from the printed DataFrame. Default is set to 1.\n\nOptional keywords\n\nlat::Float64 : Geographical WGS84 coordinate of the location (°S < 0, °N > 0)\nlong::Float64 : Geographical WGS84 coordinate of the location (°W < 0, °E > 0)\ndays::Int64 : Number of days for which data are returned. Default is 6\n\ndays, which is also the maximum.\n\nExample\n\njulia> plot_hourly_solar(\"Canberra\", days = 3)\n                                     ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Canberra⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ \n                                     ⠀Timezone: Australia/Sydney⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀[Weather data by Open-Meteo.com]⠀ \n                                     ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ \n                               1 000 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠲⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                                     ┃⠀⠀⢀⠔⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠸⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠒⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                                     ┃⠀⠀⡜⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⠀⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠘⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                                     ┃⠀⡸⠀⠀⠘⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠘⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠸⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                                     ┃⢀⠇⠀⠀⠀⢇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⢇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                                     ┃⢸⠀⠀⠀⠀⠈⢆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⢱⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                                     ┃⡎⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠸⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n   Shortwave radiation [W/m^2]       ┃⠇⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⢇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                                     ┃⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠸⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                                     ┃⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                                     ┃⠀⠀⠀⠀⠀⠀⠀⠀⢱⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⢱⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                                     ┃⠀⠀⠀⠀⠀⠀⠀⠀⠘⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀┃ \n                                     ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸┃ \n                                     ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢱⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇┃ \n                                   0 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠣⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⠜⠀┃ \n                                     ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ \n                                     ⠀2023-02-25T23:00:00⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀2023-02-28T22:00:00⠀ \n                                     ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Time [days]⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ \n\n\n\n\n\n","category":"function"},{"location":"#WeatherReport.plot_hourly_temp","page":"User Guide","title":"WeatherReport.plot_hourly_temp","text":"plot_hourly_temp(city::String = \"\",\n                 i_row::Int64 = 1;\n                 lat::Float64 = 0.0,\n                 long::Float64 = 0.0,\n                 days::Int64 = 6)\n\nShows the hourly air temperature [°C] at 2 meter above ground and 'feels like' temperature for a given city.\n\nArguments\n\ncity::String : Valid city name, e.g. \"Oslo\", \"Paris\", \"Amsterdam\" etc.\ni_row::Int64 : In case of more than one match for a given location,                  select the desired timezone by providing the row index                  from the printed DataFrame. Default is set to 1.\n\nOptional keywords\n\nlat::Float64 : Geographical WGS84 coordinate of the location (°S < 0, °N > 0)\nlong::Float64 : Geographical WGS84 coordinate of the location (°W < 0, °E > 0)\ndays::Int64 : Number of days for which data are returned. Default is 6                 days, which is also the maximum.\n\nExample\n\njulia> plot_hourly_temp(\"Veldhoven\", days = 2)\n             ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Veldhoven: min -1.5 °C, max 6.3 °C (air temp)⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀                \n             ⠀Timezone: Europe/Amsterdam⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀[Weather data by Open-Meteo.com]⠀                \n             ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓                \n         6.3 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠉⠉⠉⠢⢄⠀⠀⠀┃ Air temperature\n             ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣄⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠣⡀⠀┃ Feels like     \n             ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠁⠀⠀⠈⠱⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠑⡄┃                \n             ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠜⠁⠀⠀⠀⠀⠀⠀⠑⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘┃                \n             ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃                \n             ┃⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃                \n             ┃⠈⠢⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠢⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⢀⠖⠉⠉⠉⠒⠢⠤⣀⡀⠀┃                \n   [°C]      ┃⣀⣀⣈⣑⣲⣤⣄⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣠⣃⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣈⣒⣦⣤⣄⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣠⣃⣀⣀⣜⣁⣀⣀⣀⣀⣀⣀⣀⣀⣉⣢┃                \n             ┃⠀⠀⠀⠀⠀⠀⠀⠀⠉⠑⠢⢄⣀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⣀⠤⠤⠤⠤⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠓⠢⢄⣀⣀⠀⠀⠀⠀⠀⠀⠀⢀⡎⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃                \n             ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠒⠒⠢⠤⠤⠊⠀⠀⠀⠀⠀⢠⠔⠉⠀⠀⠀⠀⠀⠀⠣⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠓⠲⠤⠔⠁⠀⠀⢰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃                \n             ┃⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃                \n             ┃⠀⠙⠢⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃                \n             ┃⠀⠀⠀⠀⠙⠒⠒⠲⠤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⠦⠤⠤⠤⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃                \n             ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⠦⣀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠒⠒⠒⠒⠤⠤⠤⢤⣀⣀⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃                \n        -5.7 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠒⢤⣀⣀⣀⣀⠴⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃                \n             ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛                \n             ⠀2023-02-25T19:00:00⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀2023-02-27T18:00:00⠀                \n             ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Time [days]⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀    \n\n\n\n\n\n","category":"function"},{"location":"#WeatherReport.plot_hourly_windspeed","page":"User Guide","title":"WeatherReport.plot_hourly_windspeed","text":"plot_hourly_windspeed(city::String = \"\",\n                      i_row::Int64 = 1;\n                      lat::Float64 = 0.0,\n                      long::Float64 = 0.0,\n                      days::Int64 = 6)\n\nShows the wind speed at 10 meter above ground for a given city.\n\nArguments\n\ncity::String : Valid city name, e.g. \"Oslo\", \"Paris\", \"Amsterdam\" etc.\ni_row::Int64 : In case of more than one match for a given location,                  select the desired timezone by providing the row index                  from the printed DataFrame. Default is set to 1.\n\nOptional keywords\n\nlat::Float64 : Geographical WGS84 coordinate of the location (°S < 0, °N > 0)\nlong::Float64 : Geographical WGS84 coordinate of the location (°W < 0, °E > 0)\ndays::Int64 : Number of days for which data are returned. Default is 6                 days, which is also the maximum.\n\nExample\n\njulia> plot_hourly_windspeed(\"Zurich\", days = 3)\n                        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Zurich⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ \n                        ⠀Timezone: Europe/Zurich⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀[Weather data by Open-Meteo.com]⠀ \n                        ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ \n                     30 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠢⡄⠀⠀⠀⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                        ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠊⠀⠀⠘⠎⢣⡸⢰⠀⠀⠀⠀⠀⠀⣠⠀⠀⠀⠀⡸⢆⡎⠈⠑⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                        ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠒⠊⢆⠇⠀⠀⠀⠀⠀⠈⠃⠘⣄⠔⠢⡀⢠⠋⠀⢇⣀⠴⠤⠃⠘⠁⠀⠀⢱⢀⢦⠀⣀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                        ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠋⠀⠋⠀⠉⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                        ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                        ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                        ┃⠀⡀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⣀⠤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n   Wind speed [km/h]    ┃⢰⢇⠀⢀⣄⣀⠤⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⢲⠀⠀⠀⠀⠀┃ \n                        ┃⢸⠸⡜⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠲⡀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠔⠉⠉⠀⠀⠀⠣⡀⠀⠀⠀┃ \n                        ┃⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⠒⠒⢄⣀⡠⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠑⠤⡀⠀┃ \n                        ┃⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠱⡀┃ \n                        ┃⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑┃ \n                        ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                        ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                      0 ┃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀┃ \n                        ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ \n                        ⠀2023-02-25T22:00:00⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀2023-02-28T21:00:00⠀ \n                        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Time [days]⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ \n\n\n\n\n\n","category":"function"},{"location":"#WeatherReport.show_current","page":"User Guide","title":"WeatherReport.show_current","text":"show_current(city::String, i_row::Int64 = 1)\n\nShows the current weather conditions for a given city.\n\nArguments\n\ncity::String : Valid city name, e.g. \"Oslo\", \"Paris\", \"Amsterdam\" etc.\ni_row::Int64 : In case of more than one match for a given location,                  select the desired timezone by providing the row index                  from the printed DataFrame. Default is set to 1.\n\nExample\n\njulia> show_current(\"Lisbon\")\n[ Info: More than one match found, showing report for location in row 1.\n[ Info: You can select another location by its row index.\n8×4 DataFrame\n Row │ CITY     TIMEZONE          LATITUDE  LONGITUDE \n     │ String?  String31          Float64   Float64   \n─────┼────────────────────────────────────────────────\n   1 │ Lisbon   Europe/Lisbon      38.7167   -9.13333\n   2 │ Lisbon   America/New_York   39.8609  -83.6352\n   3 │ Lisbon   America/New_York   41.604   -72.0117\n   4 │ Lisbon   America/Chicago    41.9211  -91.3855\n   5 │ Lisbon   America/New_York   44.0315  -70.1045\n   6 │ Lisbon   America/Chicago    46.4416  -97.6812\n   7 │ Lisbon   America/New_York   44.2134  -71.9109\n   8 │ Lisbon   America/New_York   40.772   -80.7681\n┌───────────────┬───────────┬────────────┬─────────────┬───────────┬─────────┬─────────┐\n│      Timezone │ Elevation │ Wind speed │ Temperature │ Condition │      🌅 │      🌆 │\n│         [WET] │       [m] │     [km/h] │        [°C] │        [] │ [hh:mm] │ [hh:mm] │\n├───────────────┼───────────┼────────────┼─────────────┼───────────┼─────────┼─────────┤\n│ Europe/Lisbon │      48.0 │        9.1 │        12.5 │ Clear sky │    7:18 │   18:21 │\n└───────────────┴───────────┴────────────┴─────────────┴───────────┴─────────┴─────────┘\n\n\n\n\n\n","category":"function"},{"location":"#WeatherReport.show_daily","page":"User Guide","title":"WeatherReport.show_daily","text":"show_daily(city::String, i_row::Int64 = 1)\n\nShows the daily weather conditions for a given city.\n\nArguments\n\ncity::String : Valid city name, e.g. \"Oslo\", \"Paris\", \"Amsterdam\" etc.\ni_row::Int64 : In case of more than one match for a given location,                  select the desired timezone by providing the row index                  from the printed DataFrame. Default is set to 1.\n\nExample\n\njulia> show_daily(\"Veldhoven\")\n┌────────────┬────────┬────────┬────────────┬────────────┬───────────┬────────────────┬─────────────┬─────────────────────┐\n│       Time │ Min. T │ Max. T │ App. min T │ App. max T │ Prec. sum │ Prec. duration │ Prec. prob. │           Condition │\n│     [date] │   [°C] │   [°C] │       [°C] │       [°C] │      [mm] │        [hours] │         [%] │                  [] │\n├────────────┼────────┼────────┼────────────┼────────────┼───────────┼────────────────┼─────────────┼─────────────────────┤\n│ 2023-02-26 │   -1.4 │    4.9 │       -5.7 │       -0.7 │       0.0 │            0.0 │           0 │       Partly cloudy │\n│ 2023-02-27 │   -1.6 │    6.2 │       -5.1 │        1.4 │       0.0 │            0.0 │           0 │            Overcast │\n│ 2023-02-28 │   -1.1 │    4.3 │       -5.0 │       -1.3 │       0.0 │            0.0 │           0 │       Partly cloudy │\n│ 2023-03-01 │   -2.0 │    5.3 │       -6.4 │       -0.2 │       0.0 │            0.0 │           0 │            Overcast │\n│ 2023-03-02 │   -1.2 │    6.7 │       -5.1 │        2.0 │       0.0 │            0.0 │           0 │       Partly cloudy │\n│ 2023-03-03 │   -1.1 │    3.3 │       -4.9 │       -0.3 │       0.0 │            0.0 │           0 │ Depositing rime fog │\n│ 2023-03-04 │   -0.8 │    7.5 │       -3.6 │        4.7 │       0.0 │            0.0 │           0 │                 Fog │\n└────────────┴────────┴────────┴────────────┴────────────┴───────────┴────────────────┴─────────────┴─────────────────────┘\nEurope/Amsterdam CET\n[Weather data by Open-Meteo.com]\n\n\n\n\n\n","category":"function"},{"location":"#WeatherReport.where_am_i-Tuple{}","page":"User Guide","title":"WeatherReport.where_am_i","text":"where_am_i()\n\nShows information about your current location.\n\nExample\n\njulia> where_am_i()\n┌──────────┬───────────┬──────────────────┬──────────────┬───────────────┬─────────────┐\n│ Latitude │ Longitude │         Timezone │         City │        Region │     Country │\n├──────────┼───────────┼──────────────────┼──────────────┼───────────────┼─────────────┤\n│  51.3523 │    5.4305 │ Europe/Amsterdam │ Valkenswaard │ North Brabant │ Netherlands │\n└──────────┴───────────┴──────────────────┴──────────────┴───────────────┴─────────────┘\n\n\n\n\n\n","category":"method"}]
}
